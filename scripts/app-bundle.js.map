{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","http","message","activate","params","queryDict","location","search","substr","split","forEach","item","console","log","authUrl","redirect","email","code","do","password","confirm","fetch","then","response","json","window","replace","alert","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;;;MAIaA,cAAAA,cADZ;AAEC,iBAAYC,IAAZ,EAAkB;AAAA;;AAChB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,OAAL,GAAe,gBAAf;AACD;;kBAEDC,6BAASC,QAAQ;AACf,UAAIC,YAAY,EAAhB;AACA,UAAGC,SAASC,MAAZ,EAAmB;AACjBD,iBAASC,MAAT,CAAgBC,MAAhB,CAAuB,CAAvB,EAA0BC,KAA1B,CAAgC,GAAhC,EAAqCC,OAArC,CAA6C,UAASC,IAAT,EAAe;AAACN,oBAAUM,KAAKF,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAV,IAAgCE,KAAKF,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAhC;AAAmD,SAAhH;AACAG,gBAAQC,GAAR,CAAY,eAAZ;AACAD,gBAAQC,GAAR,CAAYR,SAAZ;AACA,aAAKS,OAAL,GAAeT,UAAU,SAAV,CAAf;AACA,aAAKU,QAAL,GAAgBV,UAAU,UAAV,CAAhB;AACA,aAAKW,KAAL,GAAaX,UAAU,QAAV,CAAb;AACA,aAAKY,IAAL,GAAYZ,UAAU,MAAV,CAAZ;AACD,OARD,MAQO,CAEN;AACF;;kBAEDa,oBAAK;AAAA;;AACH,UAAG,CAAC,KAAKF,KAAN,IAAe,CAAC,KAAKG,QAArB,IAAiC,CAAC,KAAKC,OAA1C,EAAkD;AAChD;AACD;AACD,UAAG,KAAKD,QAAL,KAAkB,KAAKC,OAA1B,EAAkC;AAChC;AACD;;AAED,WAAKnB,IAAL,CAAUoB,KAAV,CAAmB,KAAKP,OAAxB,mCAA6D,KAAKE,KAAlE,oBAAsF,KAAKC,IAA3F,qBAA+G,KAAKG,OAApH,EACEE,IADF,CAEE;AAAA,eAAYC,SAASC,IAAT,GAAgBF,IAAhB,CAAqB,gBAAQ;AACvCG,iBAAOnB,QAAP,CAAgBoB,OAAhB,CAAwB,MAAKX,QAA7B;AACD,SAFW,CAAZ;AAAA,OAFF,EAKE;AAAA,eAAY;AAAA,iBAAYY,MAAM,cAAN,CAAZ;AAAA,SAAZ;AAAA,OALF;AAMD;;;;;;;;;;;oBCvCY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,KADJ;AAEbC,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBpB,IAAhB,CAAqB;AAAA,aAAMc,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@inject(HttpClient)\r\nexport class App {\r\n  constructor(http) {\r\n    this.http = http;\r\n    this.message = \"styled message\";\r\n  }\r\n\r\n  activate(params) {\r\n    var queryDict = {};\r\n    if(location.search){\r\n      location.search.substr(1).split(\"&\").forEach(function(item) {queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]})\r\n      console.log(\"logging query\");\r\n      console.log(queryDict);\r\n      this.authUrl = queryDict['authUrl'];\r\n      this.redirect = queryDict['redirect'];\r\n      this.email = queryDict['userId'];\r\n      this.code = queryDict['code'];\r\n    } else {\r\n      \r\n    }\r\n  }\r\n\r\n  do() {\r\n    if(!this.email || !this.password || !this.confirm){\r\n      return;\r\n    }\r\n    if(this.password !== this.confirm){\r\n      return;\r\n    }\r\n    \r\n    this.http.fetch(`${this.authUrl}/api/changepassword?userId=${this.email}&changeCode=${this.code}&newPassword=${this.confirm}`).\r\n      then(\r\n      response => response.json().then(data => {\r\n        window.location.replace(this.redirect)\r\n      }),\r\n      response => response => alert('unauthorized'));\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: false,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n"],"sourceRoot":"../src"}